basePath: /
definitions:
  entities.Song:
    properties:
      group_name:
        type: string
      id:
        type: integer
      link:
        type: string
      release_date:
        type: string
      song_name:
        type: string
      text:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server for a music library.
  title: Music Library API
  version: "1.0"
paths:
  /api/v1/songs:
    get:
      consumes:
      - application/json
      description: Get songs with filtering and pagination
      parameters:
      - description: Group name
        in: query
        name: group_name
        type: string
      - description: Song name
        in: query
        name: song_name
        type: string
      - description: Release date
        in: query
        name: release_date
        type: string
      - description: Link
        in: query
        name: link
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Song'
            type: array
      summary: Get songs
      tags:
      - songs
    post:
      consumes:
      - application/json
      description: Add a new song
      parameters:
      - description: Song details
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/entities.Song'
      produces:
      - application/json
      responses:
        "201":
          description: Added song
          schema:
            $ref: '#/definitions/entities.Song'
      summary: Add song
      tags:
      - songs
  /api/v1/songs/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a song by ID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete song
      tags:
      - songs
    put:
      consumes:
      - application/json
      description: Update song details
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      - description: Song details
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/entities.Song'
      produces:
      - application/json
      responses:
        "200":
          description: Updated song
          schema:
            $ref: '#/definitions/entities.Song'
      summary: Update song
      tags:
      - songs
  /api/v1/songs/{id}/text:
    get:
      consumes:
      - application/json
      description: Get song lyrics with pagination
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lyrics text
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get song lyrics
      tags:
      - songs
swagger: "2.0"
